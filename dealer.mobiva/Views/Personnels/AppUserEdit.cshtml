@model Objects.ViewModel.AppUserToDoViewModel
@{
    ViewBag.Title = "To-Do Düzenle";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var appUsers = ViewBag.AppUsers as List<Objects.ViewModel.AppUserViewModel> ?? new List<Objects.ViewModel.AppUserViewModel>();
}

<div class="content-body">
    <div class="row">
        <div class="col-12">

            @if (ViewBag.Message != null)
            {
                <div class="alert alert-@(ViewBag.MessageType ?? "info") alert-dismissible fade show" role="alert">
                    @ViewBag.Message
                    <button type="button" class="close" data-dismiss="alert" aria-label="Kapat">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="card-title">@ViewBag.Title</h4>
                    <a href="@Url.Action("ToDoList", "AppUserToDo")" class="btn btn-outline-secondary btn-sm">
                        <i class="fa fa-arrow-left mr-1"></i> Geri Dön
                    </a>
                </div>
                <div class="card-content collapse show">
                    <div class="card-body">

                        @using (Html.BeginForm("ToDoEdit", "AppUserToDo", FormMethod.Post, new { @autocomplete = "off" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(x => x.Id)

                            <div class="form-body">
                                <h4 class="form-section"><i class="fa fa-tasks"></i> Görev Bilgisi</h4>

                                <div class="form-group">
                                    <label>Açıklama</label>
                                    @Html.TextAreaFor(x => x.ToDoDetail, new { @class = "form-control", rows = 3, placeholder = "Yapılacak işin açıklamasını girin..." })
                                    @Html.ValidationMessageFor(x => x.ToDoDetail, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label>Atanan Kullanıcı</label>
                                    @Html.DropDownListFor(x => x.ToDoUserId,
                                        new SelectList(appUsers, "Id", "NameSurname", Model.ToDoUserId),
                                        "-- Seçiniz --", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.ToDoUserId, "", new { @class = "text-danger" })
                                </div>

                                @* Oluşturulma tarihi sadece düzenleme modunda ve readonly *@
                                @if (Model.Id > 0)
                                {
                                    <div class="form-group">
                                        <label>Oluşturulma Tarihi</label>
                                        @Html.TextBoxFor(x => x.CreateDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @readonly = "readonly" })
                                    </div>
                                }

                                <h4 class="form-section"><i class="fa fa-check-circle"></i> Durum</h4>

                                <div class="form-group">
                                    <div class="custom-control custom-switch">
                                        @Html.CheckBoxFor(x => x.IsDone, new { @class = "custom-control-input", id = "IsDoneSwitch" })
                                        <label class="custom-control-label" for="IsDoneSwitch">Görev Tamamlandı</label>
                                    </div>
                                </div>

                                @* Tamamlanma açıklaması alanı *@
                                <div class="form-group" id="doneDetailSection" style="@(Model.IsDone ? "display:block;" : "display:none;")">
                                    <label>Tamamlanma Açıklaması</label>
                                    @Html.TextAreaFor(x => x.DoneDetail, new { @class = "form-control", rows = 2 })
                                </div>

                                <div class="form-group">
                                    <div class="custom-control custom-switch">
                                        @Html.CheckBoxFor(x => x.ActiveFlg, new { @class = "custom-control-input", id = "ActiveFlgSwitch" })
                                        <label class="custom-control-label" for="ActiveFlgSwitch">Aktif</label>
                                    </div>
                                </div>

                                <div class="form-actions d-flex justify-content-between">
                                    <button type="submit" class="btn btn-success">
                                        <i class="fa fa-save mr-1"></i> Kaydet
                                    </button>
                                    <a href="@Url.Action("ToDoList", "AppUserToDo")" class="btn btn-light">
                                        <i class="fa fa-times mr-1"></i> İptal
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Script {
    <script>
        $(document).ready(function () {
            $('#IsDoneSwitch').change(function () {
                if ($(this).is(':checked')) {
                    $('#doneDetailSection').slideDown(200);
                } else {
                    $('#doneDetailSection').slideUp(200);
                }
            });
        });
    </script>
}
